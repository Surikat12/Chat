//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedTests {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.5.3146.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TestSuite : GeneratedTests.ChatTestClass {
        
        public TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Expect Delegates
        public delegate void LogonResponseDelegate1(int user_p1);
        
        public delegate void BroadcastAckDelegate1(int user_p1, int publisher_p2, string message_p3);
        
        public delegate void ListResponseDelegate1(int user_p1, Microsoft.Modeling.Set<int> userData_p2);
        
        public delegate void LogoffResponseDelegate1(int user_p1);
        #endregion
        
        #region Event Metadata
        static System.Reflection.EventInfo LogonResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Chat.Adapter.ChatAdapter), "LogonResponse");
        
        static System.Reflection.EventInfo ListResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Chat.Adapter.ChatAdapter), "ListResponse");
        
        static System.Reflection.EventInfo LogoffResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Chat.Adapter.ChatAdapter), "LogoffResponse");
        
        static System.Reflection.EventInfo BroadcastAckInfo = TestManagerHelpers.GetEventInfo(typeof(Chat.Adapter.ChatAdapter), "BroadcastAck");
        #endregion
        
        #region Test Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize() {
            this.InitializeTestManager();
            this.Manager.Subscribe(BroadcastAckInfo, null);
            this.Manager.Subscribe(ListResponseInfo, null);
            this.Manager.Subscribe(LogoffResponseInfo, null);
            this.Manager.Subscribe(LogonResponseInfo, null);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestCleanup() {
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS0() {
            this.Manager.BeginTest("TestSuiteS0");
            this.Manager.Comment("reaching state \'S0\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S1\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S20\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S30\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S40\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S50\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S60\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS0LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S70\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S80\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S90\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS0LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S100\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S110\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S120\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS0LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S130\'");
                        this.Manager.Comment("executing step \'call ListRequest(2)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(2);
                        this.Manager.Comment("reaching state \'S140\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S150\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS0ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S164\'");
                            this.Manager.Comment("executing step \'call LogoffRequest(2)\'");
                            Chat.Adapter.ChatAdapter.LogoffRequest(2);
                            this.Manager.Comment("reaching state \'S188\'");
                            this.Manager.Comment("checking step \'return LogoffRequest\'");
                            this.Manager.Comment("reaching state \'S217\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS0LogoffResponseChecker))) != -1)) {
                                this.Manager.Comment("reaching state \'S245\'");
                                this.Manager.Comment("executing step \'call LogoffRequest(3)\'");
                                Chat.Adapter.ChatAdapter.LogoffRequest(3);
                                this.Manager.Comment("reaching state \'S251\'");
                                this.Manager.Comment("checking step \'return LogoffRequest\'");
                                this.Manager.Comment("reaching state \'S257\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS0LogoffResponseChecker1))) != -1)) {
                                    this.Manager.Comment("reaching state \'S263\'");
                                    this.Manager.Comment("executing step \'call LogoffRequest(1)\'");
                                    Chat.Adapter.ChatAdapter.LogoffRequest(1);
                                    this.Manager.Comment("reaching state \'S269\'");
                                    this.Manager.Comment("checking step \'return LogoffRequest\'");
                                    this.Manager.Comment("reaching state \'S272\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS0LogoffResponseChecker2))) != -1)) {
                                        this.Manager.Comment("reaching state \'S275\'");
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS0LogoffResponseChecker2)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS0LogoffResponseChecker1)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS0LogoffResponseChecker)));
                            }
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS0ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS0LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS0LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS0LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS0LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S60");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS0LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S90");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS0LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S120");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS0ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(2,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of ListResponse, state S150");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S150");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S150, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        
        private void TestSuiteS0LogoffResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogoffResponse, state S217");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS0LogoffResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogoffResponse, state S257");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS0LogoffResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogoffResponse, state S272");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS10() {
            this.Manager.BeginTest("TestSuiteS10");
            this.Manager.Comment("reaching state \'S10\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S11\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S25\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S35\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S45\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S55\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S65\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS10LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S85\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S95\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS10LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S105\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S115\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S125\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS10LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S135\'");
                        this.Manager.Comment("executing step \'call ListRequest(2)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(2);
                        this.Manager.Comment("reaching state \'S145\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S155\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS10ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S169\'");
                            this.Manager.Comment("executing step \'call LogoffRequest(3)\'");
                            Chat.Adapter.ChatAdapter.LogoffRequest(3);
                            this.Manager.Comment("reaching state \'S193\'");
                            this.Manager.Comment("checking step \'return LogoffRequest\'");
                            this.Manager.Comment("reaching state \'S222\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS10LogoffResponseChecker))) != -1)) {
                                this.Manager.Comment("reaching state \'S250\'");
                                this.Manager.Comment("executing step \'call LogoffRequest(1)\'");
                                Chat.Adapter.ChatAdapter.LogoffRequest(1);
                                this.Manager.Comment("reaching state \'S256\'");
                                this.Manager.Comment("checking step \'return LogoffRequest\'");
                                this.Manager.Comment("reaching state \'S262\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS10LogoffResponseChecker1))) != -1)) {
                                    this.Manager.Comment("reaching state \'S268\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS10LogoffResponseChecker1)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS10LogoffResponseChecker)));
                            }
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS10ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS10LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS10LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS10LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS10LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S65");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS10LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S95");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS10LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S125");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS10ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(2,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of ListResponse, state S155");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S155");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S155, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        
        private void TestSuiteS10LogoffResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogoffResponse, state S222");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS10LogoffResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogoffResponse, state S262");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS12() {
            this.Manager.BeginTest("TestSuiteS12");
            this.Manager.Comment("reaching state \'S12\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S13\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S26\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S36\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S46\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S56\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S66\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS12LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S86\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S96\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS12LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S106\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S116\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S126\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS12LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S136\'");
                        this.Manager.Comment("executing step \'call ListRequest(1)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(1);
                        this.Manager.Comment("reaching state \'S146\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S156\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS12ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S170\'");
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS12ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS12LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS12LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS12LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS12LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S66");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS12LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S96");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS12LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S126");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS12ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(1,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of ListResponse, state S156");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S156");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S156, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS14() {
            this.Manager.BeginTest("TestSuiteS14");
            this.Manager.Comment("reaching state \'S14\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S15\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S27\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S37\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S47\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S57\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S67\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS14LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S77\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S87\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S97\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS14LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S107\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S117\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S127\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS14LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S137\'");
                        this.Manager.Comment("executing step \'call ListRequest(3)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(3);
                        this.Manager.Comment("reaching state \'S147\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S157\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS14ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S171\'");
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS14ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS14LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS14LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS14LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS14LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S67");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS14LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S97");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS14LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S127");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS14ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(3,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of ListResponse, state S157");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S157");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S157, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        #endregion
        
        #region Test Starting in S16
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS16() {
            this.Manager.BeginTest("TestSuiteS16");
            this.Manager.Comment("reaching state \'S16\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S17\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S28\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S38\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S48\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S58\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S68\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS16LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S78\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S88\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S98\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS16LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S108\'");
                    this.Manager.Comment("executing step \'call BroadcastRequest(1,\"1a\")\'");
                    Chat.Adapter.ChatAdapter.BroadcastRequest(1, "1a");
                    this.Manager.Comment("reaching state \'S118\'");
                    this.Manager.Comment("checking step \'return BroadcastRequest\'");
                    this.Manager.Comment("reaching state \'S128\'");
                    this.Manager.Comment("executing step \'call BroadcastRequest(1,\"1b\")\'");
                    Chat.Adapter.ChatAdapter.BroadcastRequest(1, "1b");
                    this.Manager.Comment("reaching state \'S138\'");
                    this.Manager.Comment("checking step \'return BroadcastRequest\'");
                    this.Manager.Comment("reaching state \'S148\'");
                    int temp4 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker9)));
                    if ((temp4 == 0)) {
                        this.Manager.Comment("reaching state \'S158\'");
                        int temp1 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker1)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker4)));
                        if ((temp1 == 0)) {
                            this.Manager.Comment("reaching state \'S172\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker2))) != -1)) {
                                this.Manager.Comment("reaching state \'S194\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker3))) != -1)) {
                                    this.Manager.Comment("reaching state \'S223\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker3)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker2)));
                            }
                            goto label1;
                        }
                        if ((temp1 == 1)) {
                            this.Manager.Comment("reaching state \'S173\'");
                            int temp0 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker5)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker7)));
                            if ((temp0 == 0)) {
                                this.Manager.Comment("reaching state \'S195\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker6))) != -1)) {
                                    this.Manager.Comment("reaching state \'S224\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker6)));
                                }
                                goto label0;
                            }
                            if ((temp0 == 1)) {
                                this.Manager.Comment("reaching state \'S196\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker8))) != -1)) {
                                    this.Manager.Comment("reaching state \'S225\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker8)));
                                }
                                goto label0;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker5)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker7)));
                        label0:
;
                            goto label1;
                        }
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker1)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker4)));
                    label1:
;
                        goto label4;
                    }
                    if ((temp4 == 1)) {
                        this.Manager.Comment("reaching state \'S159\'");
                        int temp3 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker10)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker15)));
                        if ((temp3 == 0)) {
                            this.Manager.Comment("reaching state \'S174\'");
                            int temp2 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker11)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker13)));
                            if ((temp2 == 0)) {
                                TestSuiteS197();
                                goto label2;
                            }
                            if ((temp2 == 1)) {
                                this.Manager.Comment("reaching state \'S198\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker14))) != -1)) {
                                    this.Manager.Comment("reaching state \'S227\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker14)));
                                }
                                goto label2;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker11)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker13)));
                        label2:
;
                            goto label3;
                        }
                        if ((temp3 == 1)) {
                            this.Manager.Comment("reaching state \'S175\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker16))) != -1)) {
                                TestSuiteS197();
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker16)));
                            }
                            goto label3;
                        }
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker10)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker15)));
                    label3:
;
                        goto label4;
                    }
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker9)));
                label4:
;
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS16LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS16LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS16LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S68");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS16LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S98");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS16BroadcastAckChecker(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1a\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S148");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S148");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1a", message_p3, "message_p3 of BroadcastAck, state S148");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS16BroadcastAckChecker1(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S158");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S158");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S158");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS16BroadcastAckChecker2(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1a\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S172");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S172");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1a", message_p3, "message_p3 of BroadcastAck, state S172");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker3(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S194");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S194");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S194");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker4(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1a\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S158");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S158");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1a", message_p3, "message_p3 of BroadcastAck, state S158");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker5(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S173");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S173");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S173");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS16BroadcastAckChecker6(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S195");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S195");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S195");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker7(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S173");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S173");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S173");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS16BroadcastAckChecker8(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S196");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S196");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S196");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker9(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1a\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S148");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S148");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1a", message_p3, "message_p3 of BroadcastAck, state S148");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS16BroadcastAckChecker10(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1a\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S159");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S159");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1a", message_p3, "message_p3 of BroadcastAck, state S159");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker11(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S174");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S174");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S174");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS197() {
            this.Manager.Comment("reaching state \'S197\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker12))) != -1)) {
                this.Manager.Comment("reaching state \'S226\'");
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS16BroadcastAckChecker12)));
            }
        }
        
        private void TestSuiteS16BroadcastAckChecker12(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S197");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S197");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S197");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker13(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S174");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S174");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S174");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS16BroadcastAckChecker14(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S198");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S198");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S198");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS16BroadcastAckChecker15(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1b\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S159");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S159");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1b", message_p3, "message_p3 of BroadcastAck, state S159");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS16BroadcastAckChecker16(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1a\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S175");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S175");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1a", message_p3, "message_p3 of BroadcastAck, state S175");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        #endregion
        
        #region Test Starting in S18
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS18() {
            this.Manager.BeginTest("TestSuiteS18");
            this.Manager.Comment("reaching state \'S18\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S19\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S29\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S39\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S49\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S59\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S69\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS18LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S79\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S89\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S99\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS18LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S109\'");
                    this.Manager.Comment("executing step \'call BroadcastRequest(1,\"1\")\'");
                    Chat.Adapter.ChatAdapter.BroadcastRequest(1, "1");
                    this.Manager.Comment("reaching state \'S119\'");
                    this.Manager.Comment("checking step \'return BroadcastRequest\'");
                    this.Manager.Comment("reaching state \'S129\'");
                    this.Manager.Comment("executing step \'call BroadcastRequest(2,\"2\")\'");
                    Chat.Adapter.ChatAdapter.BroadcastRequest(2, "2");
                    this.Manager.Comment("reaching state \'S139\'");
                    this.Manager.Comment("checking step \'return BroadcastRequest\'");
                    this.Manager.Comment("reaching state \'S149\'");
                    int temp21 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker16)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker31)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker45)));
                    if ((temp21 == 0)) {
                        this.Manager.Comment("reaching state \'S160\'");
                        int temp8 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker1)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker6)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker11)));
                        if ((temp8 == 0)) {
                            this.Manager.Comment("reaching state \'S176\'");
                            int temp5 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker2)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker4)));
                            if ((temp5 == 0)) {
                                this.Manager.Comment("reaching state \'S199\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker3))) != -1)) {
                                    TestSuiteS228();
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker3)));
                                }
                                goto label5;
                            }
                            if ((temp5 == 1)) {
                                this.Manager.Comment("reaching state \'S200\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker5))) != -1)) {
                                    TestSuiteS228();
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker5)));
                                }
                                goto label5;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker2)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker4)));
                        label5:
;
                            goto label8;
                        }
                        if ((temp8 == 1)) {
                            this.Manager.Comment("reaching state \'S177\'");
                            int temp6 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker7)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker9)));
                            if ((temp6 == 0)) {
                                this.Manager.Comment("reaching state \'S201\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker8))) != -1)) {
                                    this.Manager.Comment("reaching state \'S229\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker8)));
                                }
                                goto label6;
                            }
                            if ((temp6 == 1)) {
                                this.Manager.Comment("reaching state \'S202\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker10))) != -1)) {
                                    this.Manager.Comment("reaching state \'S230\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker10)));
                                }
                                goto label6;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker7)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker9)));
                        label6:
;
                            goto label8;
                        }
                        if ((temp8 == 2)) {
                            this.Manager.Comment("reaching state \'S178\'");
                            int temp7 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker12)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker14)));
                            if ((temp7 == 0)) {
                                this.Manager.Comment("reaching state \'S203\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker13))) != -1)) {
                                    this.Manager.Comment("reaching state \'S231\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker13)));
                                }
                                goto label7;
                            }
                            if ((temp7 == 1)) {
                                this.Manager.Comment("reaching state \'S204\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker15))) != -1)) {
                                    this.Manager.Comment("reaching state \'S232\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker15)));
                                }
                                goto label7;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker12)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker14)));
                        label7:
;
                            goto label8;
                        }
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker1)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker6)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker11)));
                    label8:
;
                        goto label21;
                    }
                    if ((temp21 == 1)) {
                        this.Manager.Comment("reaching state \'S161\'");
                        int temp12 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker17)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker22)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker26)));
                        if ((temp12 == 0)) {
                            this.Manager.Comment("reaching state \'S179\'");
                            int temp9 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker18)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker20)));
                            if ((temp9 == 0)) {
                                this.Manager.Comment("reaching state \'S205\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker19))) != -1)) {
                                    this.Manager.Comment("reaching state \'S233\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker19)));
                                }
                                goto label9;
                            }
                            if ((temp9 == 1)) {
                                TestSuiteS206();
                                goto label9;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker18)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker20)));
                        label9:
;
                            goto label12;
                        }
                        if ((temp12 == 1)) {
                            this.Manager.Comment("reaching state \'S180\'");
                            int temp10 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker23)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker24)));
                            if ((temp10 == 0)) {
                                TestSuiteS206();
                                goto label10;
                            }
                            if ((temp10 == 1)) {
                                TestSuiteS207();
                                goto label10;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker23)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker24)));
                        label10:
;
                            goto label12;
                        }
                        if ((temp12 == 2)) {
                            this.Manager.Comment("reaching state \'S181\'");
                            int temp11 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker27)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker29)));
                            if ((temp11 == 0)) {
                                this.Manager.Comment("reaching state \'S208\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker28))) != -1)) {
                                    this.Manager.Comment("reaching state \'S236\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker28)));
                                }
                                goto label11;
                            }
                            if ((temp11 == 1)) {
                                this.Manager.Comment("reaching state \'S209\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker30))) != -1)) {
                                    this.Manager.Comment("reaching state \'S237\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker30)));
                                }
                                goto label11;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker27)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker29)));
                        label11:
;
                            goto label12;
                        }
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker17)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker22)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker26)));
                    label12:
;
                        goto label21;
                    }
                    if ((temp21 == 2)) {
                        this.Manager.Comment("reaching state \'S162\'");
                        int temp16 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker32)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker36)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker41)));
                        if ((temp16 == 0)) {
                            this.Manager.Comment("reaching state \'S182\'");
                            int temp13 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker33)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker34)));
                            if ((temp13 == 0)) {
                                TestSuiteS206();
                                goto label13;
                            }
                            if ((temp13 == 1)) {
                                TestSuiteS210();
                                goto label13;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker33)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker34)));
                        label13:
;
                            goto label16;
                        }
                        if ((temp16 == 1)) {
                            this.Manager.Comment("reaching state \'S183\'");
                            int temp14 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker37)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker39)));
                            if ((temp14 == 0)) {
                                TestSuiteS211();
                                goto label14;
                            }
                            if ((temp14 == 1)) {
                                this.Manager.Comment("reaching state \'S212\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker40))) != -1)) {
                                    this.Manager.Comment("reaching state \'S240\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker40)));
                                }
                                goto label14;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker37)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker39)));
                        label14:
;
                            goto label16;
                        }
                        if ((temp16 == 2)) {
                            this.Manager.Comment("reaching state \'S184\'");
                            int temp15 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker42)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker43)));
                            if ((temp15 == 0)) {
                                TestSuiteS211();
                                goto label15;
                            }
                            if ((temp15 == 1)) {
                                this.Manager.Comment("reaching state \'S213\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker44))) != -1)) {
                                    this.Manager.Comment("reaching state \'S241\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker44)));
                                }
                                goto label15;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker42)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker43)));
                        label15:
;
                            goto label16;
                        }
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker32)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker36)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker41)));
                    label16:
;
                        goto label21;
                    }
                    if ((temp21 == 3)) {
                        this.Manager.Comment("reaching state \'S163\'");
                        int temp20 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker46)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker50)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker54)));
                        if ((temp20 == 0)) {
                            this.Manager.Comment("reaching state \'S185\'");
                            int temp17 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker47)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker48)));
                            if ((temp17 == 0)) {
                                TestSuiteS210();
                                goto label17;
                            }
                            if ((temp17 == 1)) {
                                this.Manager.Comment("reaching state \'S214\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker49))) != -1)) {
                                    this.Manager.Comment("reaching state \'S242\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker49)));
                                }
                                goto label17;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker47)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker48)));
                        label17:
;
                            goto label20;
                        }
                        if ((temp20 == 1)) {
                            this.Manager.Comment("reaching state \'S186\'");
                            int temp18 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker51)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker52)));
                            if ((temp18 == 0)) {
                                TestSuiteS207();
                                goto label18;
                            }
                            if ((temp18 == 1)) {
                                this.Manager.Comment("reaching state \'S215\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker53))) != -1)) {
                                    this.Manager.Comment("reaching state \'S243\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker53)));
                                }
                                goto label18;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker51)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker52)));
                        label18:
;
                            goto label20;
                        }
                        if ((temp20 == 2)) {
                            this.Manager.Comment("reaching state \'S187\'");
                            int temp19 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker55)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker56)));
                            if ((temp19 == 0)) {
                                TestSuiteS207();
                                goto label19;
                            }
                            if ((temp19 == 1)) {
                                this.Manager.Comment("reaching state \'S216\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker57))) != -1)) {
                                    this.Manager.Comment("reaching state \'S244\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker57)));
                                }
                                goto label19;
                            }
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker55)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker56)));
                        label19:
;
                            goto label20;
                        }
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker46)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker50)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker54)));
                    label20:
;
                        goto label21;
                    }
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker16)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker31)), new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker45)));
                label21:
;
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS18LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS18LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS18LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S69");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS18LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S99");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS18BroadcastAckChecker(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S149");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker1(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S160");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S160");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S160");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker2(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S176");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S176");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S176");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker3(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S199");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S199");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S199");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS228() {
            this.Manager.Comment("reaching state \'S228\'");
        }
        
        private void TestSuiteS18BroadcastAckChecker4(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S176");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S176");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S176");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker5(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S200");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S200");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S200");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker6(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S160");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S160");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S160");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker7(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S177");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S177");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S177");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker8(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S201");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S201");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S201");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker9(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S177");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S177");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S177");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker10(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S202");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S202");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S202");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker11(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S160");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S160");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S160");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker12(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S178");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S178");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S178");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker13(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S203");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S203");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S203");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker14(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S178");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S178");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S178");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker15(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S204");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S204");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S204");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker16(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S149");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker17(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S161");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S161");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S161");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker18(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S179");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S179");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S179");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker19(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S205");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S205");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S205");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker20(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S179");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S179");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S179");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS206() {
            this.Manager.Comment("reaching state \'S206\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker21))) != -1)) {
                this.Manager.Comment("reaching state \'S234\'");
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker21)));
            }
        }
        
        private void TestSuiteS18BroadcastAckChecker21(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S206");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S206");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S206");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker22(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S161");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S161");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S161");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker23(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S180");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S180");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S180");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker24(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S180");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S180");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S180");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS207() {
            this.Manager.Comment("reaching state \'S207\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker25))) != -1)) {
                this.Manager.Comment("reaching state \'S235\'");
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker25)));
            }
        }
        
        private void TestSuiteS18BroadcastAckChecker25(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S207");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S207");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S207");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker26(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S161");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S161");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S161");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker27(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S181");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S181");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S181");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker28(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S208");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S208");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S208");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker29(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S181");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S181");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S181");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker30(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S209");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S209");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S209");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker31(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S149");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker32(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S162");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S162");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S162");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker33(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S182");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S182");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S182");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker34(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S182");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S182");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S182");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS210() {
            this.Manager.Comment("reaching state \'S210\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker35))) != -1)) {
                this.Manager.Comment("reaching state \'S238\'");
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker35)));
            }
        }
        
        private void TestSuiteS18BroadcastAckChecker35(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S210");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S210");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S210");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker36(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S162");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S162");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S162");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker37(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S183");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S183");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S183");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS211() {
            this.Manager.Comment("reaching state \'S211\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker38))) != -1)) {
                this.Manager.Comment("reaching state \'S239\'");
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.BroadcastAckInfo, null, new BroadcastAckDelegate1(this.TestSuiteS18BroadcastAckChecker38)));
            }
        }
        
        private void TestSuiteS18BroadcastAckChecker38(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S211");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S211");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S211");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker39(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S183");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S183");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S183");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker40(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S212");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S212");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S212");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker41(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S162");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S162");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S162");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker42(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S184");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S184");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S184");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker43(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S184");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S184");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S184");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker44(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S213");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S213");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S213");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker45(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S149");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S149");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker46(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S163");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S163");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S163");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker47(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S185");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S185");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S185");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker48(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S185");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S185");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S185");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker49(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S214");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S214");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S214");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker50(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S163");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S163");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S163");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker51(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S186");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S186");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S186");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker52(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S186");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S186");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S186");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker53(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S215");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S215");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S215");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker54(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S163");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S163");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S163");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
        }
        
        private void TestSuiteS18BroadcastAckChecker55(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S187");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S187");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S187");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker56(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(2,1,\"1\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of BroadcastAck, state S187");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, publisher_p2, "publisher_p2 of BroadcastAck, state S187");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "1", message_p3, "message_p3 of BroadcastAck, state S187");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        
        private void TestSuiteS18BroadcastAckChecker57(int user_p1, int publisher_p2, string message_p3) {
            this.Manager.Comment("checking step \'event BroadcastAck(1,2,\"2\")\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of BroadcastAck, state S216");
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, publisher_p2, "publisher_p2 of BroadcastAck, state S216");
                TestManagerHelpers.AssertAreEqual<string>(this.Manager, "2", message_p3, "message_p3 of BroadcastAck, state S216");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R6, ms-chat_R5");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R6");
            this.Manager.Checkpoint("ms-chat_R5");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS2() {
            this.Manager.BeginTest("TestSuiteS2");
            this.Manager.Comment("reaching state \'S2\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S3\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S21\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S31\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S41\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S51\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S61\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS2LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S71\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S81\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S91\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS2LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S101\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S111\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S121\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS2LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S131\'");
                        this.Manager.Comment("executing step \'call ListRequest(2)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(2);
                        this.Manager.Comment("reaching state \'S141\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S151\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS2ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S165\'");
                            this.Manager.Comment("executing step \'call LogoffRequest(2)\'");
                            Chat.Adapter.ChatAdapter.LogoffRequest(2);
                            this.Manager.Comment("reaching state \'S189\'");
                            this.Manager.Comment("checking step \'return LogoffRequest\'");
                            this.Manager.Comment("reaching state \'S218\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS2LogoffResponseChecker))) != -1)) {
                                this.Manager.Comment("reaching state \'S246\'");
                                this.Manager.Comment("executing step \'call LogoffRequest(1)\'");
                                Chat.Adapter.ChatAdapter.LogoffRequest(1);
                                this.Manager.Comment("reaching state \'S252\'");
                                this.Manager.Comment("checking step \'return LogoffRequest\'");
                                this.Manager.Comment("reaching state \'S258\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS2LogoffResponseChecker1))) != -1)) {
                                    this.Manager.Comment("reaching state \'S264\'");
                                    this.Manager.Comment("executing step \'call LogoffRequest(3)\'");
                                    Chat.Adapter.ChatAdapter.LogoffRequest(3);
                                    this.Manager.Comment("reaching state \'S270\'");
                                    this.Manager.Comment("checking step \'return LogoffRequest\'");
                                    this.Manager.Comment("reaching state \'S273\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS2LogoffResponseChecker2))) != -1)) {
                                        this.Manager.Comment("reaching state \'S276\'");
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS2LogoffResponseChecker2)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS2LogoffResponseChecker1)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS2LogoffResponseChecker)));
                            }
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS2ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS2LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS2LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS2LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS2LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S61");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS2LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S91");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS2LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S121");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS2ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(2,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of ListResponse, state S151");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S151");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S151, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        
        private void TestSuiteS2LogoffResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogoffResponse, state S218");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS2LogoffResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogoffResponse, state S258");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS2LogoffResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogoffResponse, state S273");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS4() {
            this.Manager.BeginTest("TestSuiteS4");
            this.Manager.Comment("reaching state \'S4\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S5\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S22\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S32\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S42\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S52\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S62\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS4LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S72\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S82\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S92\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS4LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S102\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S112\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S122\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS4LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S132\'");
                        this.Manager.Comment("executing step \'call ListRequest(2)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(2);
                        this.Manager.Comment("reaching state \'S142\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S152\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS4ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S166\'");
                            this.Manager.Comment("executing step \'call LogoffRequest(1)\'");
                            Chat.Adapter.ChatAdapter.LogoffRequest(1);
                            this.Manager.Comment("reaching state \'S190\'");
                            this.Manager.Comment("checking step \'return LogoffRequest\'");
                            this.Manager.Comment("reaching state \'S219\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS4LogoffResponseChecker))) != -1)) {
                                this.Manager.Comment("reaching state \'S247\'");
                                this.Manager.Comment("executing step \'call LogoffRequest(2)\'");
                                Chat.Adapter.ChatAdapter.LogoffRequest(2);
                                this.Manager.Comment("reaching state \'S253\'");
                                this.Manager.Comment("checking step \'return LogoffRequest\'");
                                this.Manager.Comment("reaching state \'S259\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS4LogoffResponseChecker1))) != -1)) {
                                    this.Manager.Comment("reaching state \'S265\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS4LogoffResponseChecker1)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS4LogoffResponseChecker)));
                            }
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS4ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS4LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS4LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS4LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS4LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S62");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS4LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S92");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS4LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S122");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS4ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(2,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of ListResponse, state S152");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S152");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S152, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        
        private void TestSuiteS4LogoffResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogoffResponse, state S219");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS4LogoffResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogoffResponse, state S259");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS6() {
            this.Manager.BeginTest("TestSuiteS6");
            this.Manager.Comment("reaching state \'S6\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S7\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S23\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S33\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S43\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S53\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S63\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS6LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S83\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S93\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS6LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S103\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S113\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S123\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS6LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S133\'");
                        this.Manager.Comment("executing step \'call ListRequest(2)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(2);
                        this.Manager.Comment("reaching state \'S143\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S153\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS6ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S167\'");
                            this.Manager.Comment("executing step \'call LogoffRequest(1)\'");
                            Chat.Adapter.ChatAdapter.LogoffRequest(1);
                            this.Manager.Comment("reaching state \'S191\'");
                            this.Manager.Comment("checking step \'return LogoffRequest\'");
                            this.Manager.Comment("reaching state \'S220\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS6LogoffResponseChecker))) != -1)) {
                                this.Manager.Comment("reaching state \'S248\'");
                                this.Manager.Comment("executing step \'call LogoffRequest(3)\'");
                                Chat.Adapter.ChatAdapter.LogoffRequest(3);
                                this.Manager.Comment("reaching state \'S254\'");
                                this.Manager.Comment("checking step \'return LogoffRequest\'");
                                this.Manager.Comment("reaching state \'S260\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS6LogoffResponseChecker1))) != -1)) {
                                    this.Manager.Comment("reaching state \'S266\'");
                                    this.Manager.Comment("executing step \'call LogoffRequest(2)\'");
                                    Chat.Adapter.ChatAdapter.LogoffRequest(2);
                                    this.Manager.Comment("reaching state \'S271\'");
                                    this.Manager.Comment("checking step \'return LogoffRequest\'");
                                    this.Manager.Comment("reaching state \'S274\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS6LogoffResponseChecker2))) != -1)) {
                                        this.Manager.Comment("reaching state \'S277\'");
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS6LogoffResponseChecker2)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS6LogoffResponseChecker1)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS6LogoffResponseChecker)));
                            }
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS6ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS6LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS6LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS6LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS6LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S63");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS6LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S93");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS6LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S123");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS6ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(2,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of ListResponse, state S153");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S153");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S153, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        
        private void TestSuiteS6LogoffResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogoffResponse, state S220");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS6LogoffResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogoffResponse, state S260");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS6LogoffResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogoffResponse, state S274");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteS8() {
            this.Manager.BeginTest("TestSuiteS8");
            this.Manager.Comment("reaching state \'S8\'");
            this.Manager.Comment("executing step \'call StartServer()\'");
            Chat.Adapter.ChatSetupAdapter.StartServer();
            this.Manager.Comment("reaching state \'S9\'");
            this.Manager.Comment("checking step \'return StartServer\'");
            this.Manager.Comment("reaching state \'S24\'");
            this.Manager.Comment("executing step \'call ConnectToServer()\'");
            Chat.Adapter.ChatAdapter.ConnectToServer();
            this.Manager.Comment("reaching state \'S34\'");
            this.Manager.Comment("checking step \'return ConnectToServer\'");
            this.Manager.Comment("reaching state \'S44\'");
            this.Manager.Comment("executing step \'call LogonRequest(1)\'");
            Chat.Adapter.ChatAdapter.LogonRequest(1);
            this.Manager.Comment("reaching state \'S54\'");
            this.Manager.Comment("checking step \'return LogonRequest\'");
            this.Manager.Comment("reaching state \'S64\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS8LogonResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("executing step \'call LogonRequest(2)\'");
                Chat.Adapter.ChatAdapter.LogonRequest(2);
                this.Manager.Comment("reaching state \'S84\'");
                this.Manager.Comment("checking step \'return LogonRequest\'");
                this.Manager.Comment("reaching state \'S94\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS8LogonResponseChecker1))) != -1)) {
                    this.Manager.Comment("reaching state \'S104\'");
                    this.Manager.Comment("executing step \'call LogonRequest(3)\'");
                    Chat.Adapter.ChatAdapter.LogonRequest(3);
                    this.Manager.Comment("reaching state \'S114\'");
                    this.Manager.Comment("checking step \'return LogonRequest\'");
                    this.Manager.Comment("reaching state \'S124\'");
                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS8LogonResponseChecker2))) != -1)) {
                        this.Manager.Comment("reaching state \'S134\'");
                        this.Manager.Comment("executing step \'call ListRequest(2)\'");
                        Chat.Adapter.ChatAdapter.ListRequest(2);
                        this.Manager.Comment("reaching state \'S144\'");
                        this.Manager.Comment("checking step \'return ListRequest\'");
                        this.Manager.Comment("reaching state \'S154\'");
                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS8ListResponseChecker))) != -1)) {
                            this.Manager.Comment("reaching state \'S168\'");
                            this.Manager.Comment("executing step \'call LogoffRequest(3)\'");
                            Chat.Adapter.ChatAdapter.LogoffRequest(3);
                            this.Manager.Comment("reaching state \'S192\'");
                            this.Manager.Comment("checking step \'return LogoffRequest\'");
                            this.Manager.Comment("reaching state \'S221\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS8LogoffResponseChecker))) != -1)) {
                                this.Manager.Comment("reaching state \'S249\'");
                                this.Manager.Comment("executing step \'call LogoffRequest(2)\'");
                                Chat.Adapter.ChatAdapter.LogoffRequest(2);
                                this.Manager.Comment("reaching state \'S255\'");
                                this.Manager.Comment("checking step \'return LogoffRequest\'");
                                this.Manager.Comment("reaching state \'S261\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS8LogoffResponseChecker1))) != -1)) {
                                    this.Manager.Comment("reaching state \'S267\'");
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS8LogoffResponseChecker1)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogoffResponseInfo, null, new LogoffResponseDelegate1(this.TestSuiteS8LogoffResponseChecker)));
                            }
                        }
                        else {
                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.ListResponseInfo, null, new ListResponseDelegate1(this.TestSuiteS8ListResponseChecker)));
                        }
                    }
                    else {
                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS8LogonResponseChecker2)));
                    }
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS8LogonResponseChecker1)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(TestSuite.LogonResponseInfo, null, new LogonResponseDelegate1(this.TestSuiteS8LogonResponseChecker)));
            }
            this.Manager.EndTest();
        }
        
        private void TestSuiteS8LogonResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(1)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 1, user_p1, "user_p1 of LogonResponse, state S64");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS8LogonResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogonResponse, state S94");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS8LogonResponseChecker2(int user_p1) {
            this.Manager.Comment("checking step \'event LogonResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogonResponse, state S124");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R1");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R1");
        }
        
        private void TestSuiteS8ListResponseChecker(int user_p1, Microsoft.Modeling.Set<int> userData_p2) {
            this.Manager.Comment("checking step \'event ListResponse(2,{1,2,3})\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of ListResponse, state S154");
                TestManagerHelpers.AssertNotNull(this.Manager, userData_p2, "userData_p2 of ListResponse, state S154");
                TestManagerHelpers.AssertAreEqual<Microsoft.Xrt.Runtime.RuntimeMap<int, Microsoft.Xrt.Runtime.Singleton>>(this.Manager, Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.UpdateMap<int, Microsoft.Xrt.Runtime.Singleton>(Microsoft.Xrt.Runtime.RuntimeSupport.MakeMap<int, Microsoft.Xrt.Runtime.Singleton>(), 1, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                            "Element"}, new object[] {
                                            Microsoft.Xrt.Runtime.Singleton.Single})), 2, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                        "Element"}, new object[] {
                                        Microsoft.Xrt.Runtime.Singleton.Single})), 3, this.Make<Microsoft.Xrt.Runtime.RuntimeMapElement<Microsoft.Xrt.Runtime.Singleton>>(new string[] {
                                    "Element"}, new object[] {
                                    Microsoft.Xrt.Runtime.Singleton.Single})), userData_p2.Rep, "userData_p2 of ListResponse, state S154, field selection Rep");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R3, ms-chat_R4");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R3");
            this.Manager.Checkpoint("ms-chat_R4");
        }
        
        private void TestSuiteS8LogoffResponseChecker(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(3)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 3, user_p1, "user_p1 of LogoffResponse, state S221");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        
        private void TestSuiteS8LogoffResponseChecker1(int user_p1) {
            this.Manager.Comment("checking step \'event LogoffResponse(2)\'");
            try {
                TestManagerHelpers.AssertAreEqual<int>(this.Manager, 2, user_p1, "user_p1 of LogoffResponse, state S261");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered ms-chat_R2");
                throw;
            }
            this.Manager.Checkpoint("ms-chat_R2");
        }
        #endregion
    }
}
